{"version":3,"sources":["Board.js","GameInfo.js","Header.js","App.js","index.js"],"names":["Board","console","log","this","props","playerInfo","react_default","a","createElement","className","onClick","clickFun","id","Component","GameInfo","winner","restButton","type","value","Header","resize","e","preventDefault","_this","changeBoard","selectIcon","playerTurn","clickCount","concat","player1","player2","onSubmit","min","max","required","name","checked","style","backgroundColor","width","margin","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$state","state","x","document","getElementsByName","setState","reSizeBoard","_this$state2","boardSize","boardArr","boardColumn","winComboArr","clickCountLimit","playerInfoArr","winStatus","parseInt","getElementById","Math","pow","Array","fill","tempArr","map","v","i","push","slice","_loop","tempTwoArr","filter","tempThreeArr","tempLastArr","_this$state3","clickedIdent","target","_this$state4","matchCount","j","_this$state5","_loop2","_this2","grids","src_Board","boardValue","gridStyle","display","justifyContent","gridTemplateColumns","join","src_Header","src_GameInfo","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.9792785a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Board extends Component {\r\n  render() {\r\n    // console.log(\"player1 board emoji\", this.props.player1);\r\n    console.log(\"player info @ board\", this.props.playerInfo);\r\n\r\n    return (\r\n        <div className = \"boxClass\" onClick={this.props.clickFun} id = {this.props.id} >\r\n          <h1> {this.props.playerInfo} </h1>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;","import React, {Component} from 'react';\r\n\r\nclass GameInfo extends Component {\r\n  render() {\r\n    return (\r\n      <div className = \"GameInfoClass\">\r\n        <h1> GameInfo </h1>\r\n        <h2> {this.props.winner} </h2>\r\n        <input onClick = {this.props.restButton} type= \"submit\" value= \"reset\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameInfo;","import React, {Component} from 'react';\r\n\r\nclass Header extends Component {\r\n  resize=(e) =>{\r\n    e.preventDefault();\r\n    this.props.changeBoard()\r\n  }\r\n  selectIcon=(e) => {\r\n    e.preventDefault();\r\n    this.props.selectIcon()\r\n  }\r\n  render() {\r\n\r\n    var playerTurn =\"\";\r\n    if(this.props.clickCount%2===0){\r\n      playerTurn = `Turn : Player 1 : ${this.props.player1}`\r\n    } else {\r\n      playerTurn = `Turn : Player 2 : ${this.props.player2}`\r\n    }\r\n    console.log(\"turn: \", playerTurn);\r\n\r\n    let turnStyle = {\r\n      backgroundColor: 'lightskyblue',\r\n      width:'200px',\r\n      margin: 'auto'\r\n    }\r\n    return (\r\n\r\n\r\n      <div className= \"headerClass\">\r\n        <h1> Tic Tac Toe </h1>\r\n        <div>\r\n          <form onSubmit={this.resize}>\r\n              Board Size : <input type=\"number\" id=\"width\" min=\"3\" max=\"10\" required/>\r\n              <input type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n\r\n        </div>\r\n        <br />\r\n        Player 1 : {this.props.player1}, Player 2: {this.props.player2}\r\n        <br />\r\n        <div>\r\n        <form onSubmit={this.selectIcon}>\r\n        Player 1 Icon :\r\n          <input type=\"radio\" name=\"icon\" value=\"❌\" checked/> ❌\r\n          <input type=\"radio\" name=\"icon\" value=\"⭕\"/> ⭕\r\n          <input type=\"submit\" />\r\n        </form>\r\n        </div>\r\n        <br />\r\n        <div style={turnStyle}>\r\n        {playerTurn}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\nimport './App.css';\nimport Board from './Board'\nimport GameInfo from './GameInfo'\nimport Header from './Header'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n      this.state = {\n        // used to determine board size.\n        boardSize: 3,\n        // will make the board.  Based on boardsize^2\n        boardArr: [],\n        // arranges the board into a square\n        boardColumn:[],\n        // will contain the winning combinations.\n        winComboArr:[],\n        // hold the number of turns.  Used to determine turn, setting grid value, ect.\n        clickCount: 0,\n    // based on board size, limit to how many turns can be played\n        clickCountLimit:0,\n\n        winStatus:\"\",\n        playerInfoArr:[],\n        player1:\"❌\",\n        player2:\"⭕\"\n      }\n  }\n\ncomponentDidMount() {\n  // console.log(this.state);\n  let {boardSize, boardArr, boardColumn, winComboArr, clickCount, clickCountLimit, playerInfoArr, player1, player2} = this.state\n\n  clickCountLimit = boardSize**2\n  boardArr = Array(boardSize**2).fill(0)\n  // console.log(boardArr);\n  playerInfoArr = Array(boardSize**2).fill(\"\")\n  boardColumn = Array(boardSize).fill('100px')\n  // console.log(boardColumn);\n  let tempArr = boardArr.map((v,i)=>i)\n\n    for (let i = 0; i < boardSize; i++) {\n      winComboArr.push(tempArr.slice(i*boardSize, (i+1)*boardSize))\n    }\n    // console.log('temp', tempArr);\n    for (let i = 0; i < boardSize; i++){\n      let tempTwoArr = tempArr.filter(v=>v % boardSize === i)\n      winComboArr.push(tempTwoArr)\n    }\n      let tempThreeArr = tempArr.filter(v=>(v% (boardSize+1)) === 0)\n      winComboArr.push(tempThreeArr)\n\n      let tempLastArr = tempArr.filter(v=>((v% (boardSize-1)) === 0)&&(v!==0)&&(v!==(boardSize**2-1)))\n      winComboArr.push(tempLastArr)\n\n// console.log(\"second win\", winComboArr);\n\n  this.setState({boardArr: boardArr, boardColumn: boardColumn, winComboArr:winComboArr, clickCount:clickCount, clickCountLimit:clickCountLimit, playerInfoArr:playerInfoArr, player1:player1, player2:player2 })\n\n}\n\nselectIcon=()=>{\n  let {player1, player2} = this.state\n\n  var x = document.getElementsByName(\"icon\");\n\n    console.log(\"x[0]: \",x[0].checked);\n    console.log(\"player1\",player1);\n    if(x[0].checked){\n      player1= \"❌\"\n      player2= \"⭕\"\n    } else if(x[1].checked){\n      player1= \"⭕\"\n      player2= \"❌\"\n    }\n    console.log(\"player1 after\",player1);\n\n  this.setState({player1:player1, player2:player2})\n}\n\nreSizeBoard=()=> {\n  // console.log(this.state);\n  let {boardSize, boardArr, boardColumn, winComboArr, clickCount, clickCountLimit, playerInfoArr,winStatus, player1, player2} = this.state\n\n  boardSize = parseInt(document.getElementById(\"width\").value)\n  console.log(\"boardsize : \", boardSize);\n\n  winComboArr=[]\n\n  clickCountLimit = boardSize**2\n  boardArr = Array(boardSize**2).fill(0)\n  // console.log(boardArr);\n  playerInfoArr = Array(boardSize**2).fill(\"\")\n  boardColumn = Array(boardSize).fill('100px')\n  // console.log(boardColumn);\n  let tempArr = boardArr.map((v,i)=>i)\n\n    for (let i = 0; i < boardSize; i++) {\n      winComboArr.push(tempArr.slice(i*boardSize, (i+1)*boardSize))\n      // console.log(\"winComboArr: \",winComboArr);\n    }\n    console.log('temp', tempArr);\n    for (let i = 0; i < boardSize; i++){\n      let tempTwoArr = tempArr.filter(v=>v % boardSize === i)\n      winComboArr.push(tempTwoArr)\n    }\n      let tempThreeArr = tempArr.filter(v=>(v% (boardSize+1)) === 0)\n      winComboArr.push(tempThreeArr)\n\n      let tempLastArr = tempArr.filter(v=>((v% (boardSize-1)) === 0)&&(v!==0)&&(v!==(boardSize**2-1)))\n      winComboArr.push(tempLastArr)\n\n      winStatus=\"\"\n      clickCount=0\n\n// console.log(\"second win\", winComboArr);\n\n  this.setState({boardArr: boardArr, boardColumn: boardColumn, winComboArr:winComboArr, clickCount:clickCount, clickCountLimit:clickCountLimit, playerInfoArr:playerInfoArr, boardSize:boardSize, winStatus:winStatus, player1:player1, player2:player2})\n\n}\n\n\nrestButton = () => {\n\n  let {boardArr, clickCount, playerInfoArr, winStatus, boardSize, boardColumn, clickCountLimit, player1, player2} = this.state\n\n  boardArr = Array(boardSize**2).fill(0)\n    boardColumn = Array(boardSize).fill('100px')\n  clickCount = 0\n  clickCountLimit = boardSize**2\n\n  playerInfoArr = Array(boardSize**2).fill(\"\")\n\n  winStatus = \"\"\n\n  this.setState({boardArr: boardArr, clickCount:clickCount, playerInfoArr:playerInfoArr, winStatus:winStatus, boardSize:boardSize, boardColumn:boardColumn, clickCountLimit:clickCountLimit, player1:player1, player2:player2})\n\n}\n\nclickFun = e => {\n    let clickedIdent = e.target.id\n    let {boardSize, boardArr, boardColumn, winComboArr, clickCount, clickCountLimit, winStatus, playerInfoArr, player1, player2} = this.state\n    let matchCount = 0;\n    // console.log(\"winComboArr\", winComboArr);\n    // console.log(\"clickCount\", clickCount);\n    // console.log(\"player1 emoji\": player1);\n    // console.log(\"player2 emoji\": player2);\n    if ((boardArr[clickedIdent] === 0 && (clickCount<(boardSize**2 )&& winStatus==\"\"))) {\n      if (clickCount % 2 === 0) {\n        boardArr[clickedIdent] = 1\n        playerInfoArr[clickedIdent]=player1\n        for(let i=0; i<(boardSize*2+2);i++){\n          for(let j=0; j<boardSize;j++){\n            if(boardArr[winComboArr[i][j]]===1){\n              matchCount++\n            }\n          }\n          if(matchCount===boardSize){\n            winStatus = \"Player 1 Wins\";\n            // clickCount = boardSize**2\n            break\n          }\n          matchCount=0;\n        }\n      } else {\n        boardArr[clickedIdent] = 2\n        playerInfoArr[clickedIdent]=player2\n        for(let i=0; i<(boardSize*2+2);i++){\n          for(let j=0; j<boardSize;j++){\n            if(boardArr[winComboArr[i][j]]===2){\n              matchCount++\n            }\n          }\n          if(matchCount===boardSize){\n            winStatus = \"Player 2 Wins\";\n            // clickCount = boardSize**2\n            break\n          }\n          matchCount=0;\n        }\n      }\n      clickCount ++\n      if (clickCount === boardSize**2&&winStatus==\"\") {\n        winStatus = \"Draw\"\n      }\n      console.log(\"clickCount after player\", clickCount);\n     }\n\n     console.log(\"boardArr\",boardArr);\n\n  this.setState({boardArr: boardArr, boardColumn: boardColumn, winComboArr:winComboArr, clickCount:clickCount, clickCountLimit:clickCountLimit, winStatus:winStatus, playerInfoArr:playerInfoArr, player1:player1, player2:player2})\n  // console.log(\"player1 emoji\": player1);\n  // console.log(\"player2 emoji\": player2);\n\n}\n// console.log(\"winStatus\",winStatus);\n\n  render() {\n  console.log('state', this.state);\n    let grids = this.state.boardArr.map((v, i) =>{\n      return(\n        <Board id = {i} clickFun={this.clickFun} boardValue = {this.state.boardArr[i]} playerInfo={this.state.playerInfoArr[i]} />\n\n      )\n    })\n    let gridStyle = {\n      display: 'grid',\n      margin: 'auto',\n      justifyContent: 'center',\n      // backgroundColor: 'green',\n      gridTemplateColumns: this.state.boardColumn.join(' ')\n    }\n    // console.log(this.state);\n    return (\n      <div>\n        <Header changeBoard = {this.reSizeBoard} selectIcon = {this.selectIcon} player1={this.state.player1}  player2={this.state.player2} clickCount={this.state.clickCount}/>\n        <div style = {gridStyle}>\n        {grids}\n        </div>\n        <GameInfo winner = {this.state.winStatus} restButton={this.restButton} player1={this.state.player1}  player2={this.state.player2}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}